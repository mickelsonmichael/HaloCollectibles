{"version":3,"sources":["UserContext.js","common/AlertMessage.jsx","common/achievements/Categories.jsx","common/achievements/AchievementProgress.jsx","common/achievements/AchievementCard.jsx","common/achievements/AchievementCategory.jsx","common/achievements/Achievements.jsx","features/user/Emblem.jsx","features/user/PlayerCard.jsx","features/user/UserAchievements.jsx","common/layout/UserLogin.jsx","common/layout/NavLink.jsx","common/layout/NavMenu.jsx","common/Home.jsx","common/achievements/AchievementCount.jsx","features/general/General.jsx","common/skulls/SkullCard.jsx","common/skulls/Skulls.jsx","common/terminals/TerminalCard.jsx","common/terminals/Terminals.jsx","common/Game.jsx","features/haloce/HaloCE.jsx","features/halo2/Halo2.jsx","features/halo3/Halo3.jsx","features/ODST/ODST.jsx","features/reach/Reach.jsx","App.js","serviceWorker.js","index.js"],"names":["userKey","initialState","gamertag","achievements","xuid","showCompleted","lastUpdate","Date","isLoading","UserContext","React","createContext","localState","JSON","parse","localStorage","getItem","reducer","player","newPlayer","removeItem","getXuid","a","fetch","response","ok","text","Error","getProgress","json","UserProvider","props","useReducer","setPlayer","useState","setGamertag","setIsLoading","useEffect","date","fetchData","length","now","setItem","stringify","Provider","value","toggleShowComplete","clearPlayer","children","isVisible","color","Alert","onOptionChange","categories","Input","type","onChange","e","target","bsSize","map","cat","key","title","achievement","useContext","tooltip","openTooltip","undefined","userAchievement","find","name","progress","current","id","replace","Progress","Tooltip","placement","isOpen","toggle","completedDate","className","isComplete","size","score","description","link","href","rel","getFullYear","getMonth","toString","padStart","getDate","AchievementProgress","AchievementCategory","AlertMessage","Row","noGutters","ach","Col","lg","md","xs","AchievementCard","Achievements","forceShowComplete","currentCategory","setCategory","filter","setFilter","reduce","acc","cur","concat","lowercaseFilter","toLowerCase","includes","filterAchievements","userProgress","x","every","sort","b","sm","Categories","val","offset","placeholder","image","setImage","then","blob","src","URL","createObjectURL","alt","height","width","complete","total","percent","Emblem","toUpperCase","Math","floor","userAchievements","PlayerCard","userGamertag","setUserGamertag","Label","checked","to","Button","onClick","InputGroup","disabled","InputGroupAddon","addonType","Spinner","url","cssClass","useLocation","pathname","NavItem","setIsOpen","Navbar","dark","expand","NavbarToggler","Collapse","navbar","Nav","NavLink","NavbarText","UserLogin","Jumbotron","AchievementCount","numberOfAchievements","sum","skull","collapse","setCollapse","difficulty","isFound","level","video","dangerouslySetInnerHTML","__html","location","skulls","filteredSkulls","s","SkullCard","terminal","Terminals","terminals","filteredTerminals","console","log","t","TerminalCard","activeTab","setActiveTab","Skulls","Game","Halo2","Halo3","ODST","Component","NavMenu","Container","fluid","path","exact","Home","UserAchievements","General","HaloCE","Reach","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.922d1a5c.chunk.js","sourcesContent":["import React, { useReducer, useEffect, useState } from \"react\";\n\nconst userKey = \"HALO_COLLECTIBLES_USER\";\n\nconst initialState = {\n  gamertag: \"\",\n  achievements: [],\n  xuid: \"\",\n  showCompleted: false,\n  lastUpdate: new Date(),\n  isLoading: false,\n};\n\nconst UserContext = React.createContext(initialState);\nconst localState = JSON.parse(localStorage.getItem(userKey));\n\nconst reducer = (player, newPlayer) => {\n  if (!newPlayer) {\n    localStorage.removeItem(userKey);\n    return \"\";\n  }\n\n  return {\n    ...player,\n    ...newPlayer,\n  };\n};\n\nconst getXuid = async (gamertag) => {\n  var response = await fetch(\n    `https://halocollectiblesapi.azurewebsites.net/api/Search?name=${gamertag}`\n  );\n\n  if (response.ok) {\n    return await response.text();\n  }\n\n  throw new Error(\"Invalid gamertag\");\n};\n\nconst getProgress = async (xuid) => {\n  const response = await fetch(\n    `https://halocollectiblesapi.azurewebsites.net/api/GetHalo?xuid=${xuid}`\n  );\n\n  if (response.ok) {\n    return await response.json();\n  }\n};\n\nconst isExpired = (date) => {\n  const hour = 1000 * 60 * 60;\n\n  return Date.now() - hour > date;\n};\n\nconst UserProvider = (props) => {\n  const [player, setPlayer] = useReducer(reducer, localState || initialState);\n  const [gamertag, setGamertag] = useState(player.gamertag);\n  const [isLoading, setIsLoading] = useState(\"\");\n\n  const toggleShowComplete = () => {\n    setPlayer({\n      showCompleted: !player.showCompleted,\n    });\n  };\n\n  const clearPlayer = () => {\n    setPlayer(initialState);\n    setGamertag(\"\");\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      let xuid = await getXuid(gamertag);\n      let achievements = await getProgress(xuid);\n\n      setPlayer({\n        xuid,\n        achievements,\n        gamertag: gamertag,\n        lastUpdate: new Date(),\n      });\n\n      setIsLoading(false);\n    };\n\n    if (\n      gamertag !== \"\" &&\n      (player.achievements.length === 0 || isExpired(player.lastUpdate))\n    ) {\n      fetchData();\n    }\n  }, [gamertag, player.achievements.length, player.lastUpdate]);\n\n  useEffect(() => {\n    localStorage.setItem(userKey, JSON.stringify(player));\n  }, [player, gamertag]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        player,\n        setGamertag,\n        isLoading,\n        toggleShowComplete,\n        clearPlayer,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserContext, UserProvider };\n","import React from \"react\";\nimport { Alert } from \"reactstrap\";\n\nexport default ({ children, isVisible = true, color }) => {\n  if (isVisible) {\n    return <Alert color={color}>{children}</Alert>;\n  } else {\n    return null;\n  }\n};\n","import React from \"react\";\nimport { Input } from \"reactstrap\";\n\nexport default ({ onOptionChange, categories }) => (\n  <Input\n    type=\"select\"\n    onChange={(e) => onOptionChange(e.target.value)}\n    bsSize=\"sm\"\n  >\n    <option value=\"\">- All -</option>\n    {categories.map((cat) => (\n      <option key={cat.title} value={cat.title}>\n        {cat.title}\n      </option>\n    ))}\n  </Input>\n);\n","import React, { useState } from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport { Progress, Tooltip } from \"reactstrap\";\n\nexport default ({ achievement }) => {\n  const { achievements } = React.useContext(UserContext).player;\n  const [tooltip, openTooltip] = useState(false);\n\n  const toggle = () => openTooltip(!tooltip);\n\n  if (achievements === undefined || achievements.length === 0) {\n    return null;\n  }\n\n  const userAchievement = achievements.find((a) => a.name === achievement.name);\n\n  if (\n    userAchievement === undefined ||\n    userAchievement.target === undefined ||\n    userAchievement.target === 1 ||\n    userAchievement.progress >= 1\n  ) {\n    return null;\n  }\n\n  const { progress, current, target } = userAchievement;\n  const id =\n    achievement.name.replace(/ /g, \"-\").replace(/[?.,:!\"']/g, \"\") + \"-tooltip\";\n\n  return (\n    <div>\n      <Progress\n        color={progress > 1 ? \"success\" : \"info\"}\n        value={progress * 100}\n        id={id}\n      />\n      <Tooltip placement=\"top\" isOpen={tooltip} target={id} toggle={toggle}>\n        {current} / {target}\n      </Tooltip>\n    </div>\n  );\n};\n","import React from \"react\";\nimport AchievementProgress from \"./AchievementProgress\";\nimport { MdCheckCircle, MdLink } from \"react-icons/md\";\nimport \"./achievements.css\";\n\nexport default ({ achievement }) => {\n  const completedDate = achievement.completedDate\n    ? new Date(achievement.completedDate)\n    : null;\n\n  return (\n    <div className=\"achievement-card\">\n      <div className=\"achievement-card__header\">\n        <div className=\"achievement-card__title\">{achievement.name}</div>\n        <span className=\"achievement-card__score\">\n          {achievement.isComplete && <MdCheckCircle size={15} />}\n          {achievement.score}\n        </span>\n      </div>\n      <div className=\"achievement-card__description\">\n        {achievement.description}\n        {achievement.link && (\n          <span>\n            {\" \"}\n            <a\n              href={achievement.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <MdLink />\n              Link\n            </a>\n          </span>\n        )}\n        {completedDate && (\n          <div className=\"text-muted\">\n            Unlocked: {completedDate.getFullYear()}-\n            {(completedDate.getMonth() + 1).toString().padStart(2, \"0\")}-\n            {completedDate.getDate().toString().padStart(2, \"0\")}\n          </div>\n        )}\n      </div>\n      <div className=\"achievement-card__progress\">\n        <AchievementProgress achievement={achievement} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport AlertMessage from \"../AlertMessage\";\nimport { Col, Row } from \"reactstrap\";\nimport AchievementCard from \"./AchievementCard\";\n\nconst AchievementCategory = ({ achievements }) => {\n  if (achievements.length === 0) {\n    return (\n      <AlertMessage color=\"info\" isVisible>\n        No Achievements found!\n      </AlertMessage>\n    );\n  }\n\n  return (\n    <Row noGutters>\n      {achievements.map((ach) => (\n        <Col lg={4} md={6} xs={12} key={ach.name} className=\"d-flex\">\n          <AchievementCard achievement={ach} />\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default AchievementCategory;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Row, Col } from \"reactstrap\";\nimport Categories from \"./Categories\";\nimport { UserContext } from \"../../UserContext\";\nimport AchievementCategory from \"./AchievementCategory\";\n\nconst filterAchievements = (achievements, filter) => {\n  if (filter) {\n    const lowercaseFilter = filter.toLowerCase();\n    return achievements.filter(\n      (a) =>\n        a.name.toLowerCase().includes(lowercaseFilter) ||\n        a.description.toLowerCase().includes(lowercaseFilter)\n    );\n  }\n  return achievements;\n};\n\nconst Achievements = ({ categories, forceShowComplete = false }) => {\n  const { player } = React.useContext(UserContext);\n  const [currentCategory, setCategory] = React.useState(\"\");\n  const [filter, setFilter] = React.useState(\"\");\n\n  let achievements = currentCategory\n    ? categories.find((cat) => cat.title === currentCategory).achievements\n    : categories.reduce((acc, cur) => acc.concat(cur.achievements), []);\n\n  achievements = filterAchievements(achievements, filter);\n\n  if (player.achievements.length > 0) {\n    achievements = achievements.map((ach) => {\n      let userProgress = player.achievements.find(\n        (x) => x.name.toLowerCase() === ach.name.toLowerCase()\n      );\n\n      return (\n        { ...userProgress, link: ach.link } ?? { ...ach, isComplete: false }\n      );\n    });\n\n    if (!player.showCompleted && !forceShowComplete) {\n      achievements = achievements.filter((ach) => ach.isComplete === false);\n    }\n  }\n\n  if (achievements.every((a) => a.isComplete)) {\n    achievements = achievements.sort(\n      (a, b) => new Date(b.completedDate) - new Date(a.completedDate)\n    );\n  } else {\n    achievements = achievements.sort((a, b) => b.name - a.name);\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col md=\"4\" sm=\"12\">\n          {categories.length > 1 && (\n            <Categories\n              categories={categories}\n              onOptionChange={(val) => setCategory(val)}\n            />\n          )}\n        </Col>\n        <Col md={{ size: 3, offset: 5 }} sm=\"12\">\n          <Input\n            type=\"text\"\n            onChange={(e) => setFilter(e.target.value)}\n            placeholder={\"Search \" + achievements.length + \" achievements\"}\n            bsSize=\"sm\"\n          />\n        </Col>\n      </Row>\n\n      <br />\n\n      <AchievementCategory achievements={achievements} />\n    </div>\n  );\n};\n\nAchievements.propTypes = {\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      achievements: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          description: PropTypes.string,\n          score: PropTypes.number,\n        })\n      ),\n    })\n  ),\n};\n\nexport default Achievements;\n","import React from \"react\";\n\nexport default ({ gamertag }) => {\n  var [image, setImage] = React.useState(null);\n\n  React.useEffect(() => {\n    if (gamertag && image === null) {\n      fetch(\n        `https://halocollectiblesapi.azurewebsites.net/api/GetEmblem?name=${gamertag}`\n      ).then(async (response) => {\n        if (response.ok) {\n          setImage(await response.blob());\n        }\n      });\n    }\n  });\n\n  if (!gamertag || image === null) {\n    return null;\n  }\n\n  return (\n    <div>\n      <img\n        src={URL.createObjectURL(image)}\n        alt={gamertag}\n        height=\"128\"\n        width=\"128\"\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport Emblem from \"./Emblem\";\nimport { Progress } from \"reactstrap\";\n\nexport default ({ gamertag, complete, total }) => {\n  const percent = (complete / total) * 100;\n\n  return (\n    <div className=\"d-flex mb-2\">\n      <Emblem gamertag={gamertag} />\n\n      <div className=\"flex-grow-1 align-self-center m-2\">\n        <h2 className=\"d-flex\">\n          <strong className=\"mr-auto\">{gamertag.toUpperCase()}</strong>\n          <span className=\"text-muted\">\n            {complete}/{total} ({Math.floor(percent)}%)\n          </span>\n        </h2>\n        <Progress color=\"info\" value={percent} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { UserContext } from \"../../UserContext\";\nimport AlertMessage from \"../../common/AlertMessage\";\nimport Achievements from \"../../common/achievements/Achievements\";\nimport PlayerCard from \"./PlayerCard\";\n\nexport default () => {\n  const { gamertag, achievements } = React.useContext(UserContext).player;\n\n  if (!gamertag) {\n    return (\n      <AlertMessage color=\"info\">\n        You are not logged in. Use the login form in the header\n      </AlertMessage>\n    );\n  }\n\n  const userAchievements = achievements.filter((a) => a.isComplete);\n\n  if (userAchievements.length === 0) {\n    return (\n      <AlertMessage color=\"warning\">\n        You have no achievements complete yet! Get started!\n      </AlertMessage>\n    );\n  }\n\n  return (\n    <div>\n      <PlayerCard\n        gamertag={gamertag}\n        complete={userAchievements.length}\n        total={achievements.length}\n      />\n\n      <Achievements\n        forceShowComplete\n        categories={[{ title: \"completed\", achievements: userAchievements }]}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Input,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  Spinner,\n  Label,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../UserContext\";\nimport Switch from \"react-switch\";\n\nexport default () => {\n  const {\n    player,\n    setGamertag,\n    isLoading,\n    toggleShowComplete,\n    clearPlayer,\n  } = React.useContext(UserContext);\n  const [userGamertag, setUserGamertag] = React.useState(player.gamertag);\n\n  if (player.achievements.length > 0 && !isLoading) {\n    return (\n      <div className=\"d-flex align-items-baseline ml-2\">\n        <Label className=\"mr-2 text-right\">\n          <Switch\n            onChange={() => toggleShowComplete()}\n            checked={player.showCompleted}\n            height={17}\n            width={34}\n            className=\"mr-2 align-text-bottom\"\n          />\n          <span>Show Complete </span>\n          <span>\n            for&nbsp;\n            <Link to=\"/user\" className=\"mr-2\">\n              {player.gamertag}\n            </Link>\n          </span>\n        </Label>\n\n        <Button\n          size=\"sm\"\n          color=\"outline-danger\"\n          type=\"button\"\n          onClick={() => clearPlayer()}\n        >\n          Clear\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <InputGroup>\n      <Input\n        type=\"text\"\n        bsSize=\"sm\"\n        placeholder=\"Gamertag\"\n        onChange={(e) => setUserGamertag(e.target.value)}\n        disabled={isLoading}\n      />\n      <InputGroupAddon addonType=\"append\">\n        <Button\n          type=\"button\"\n          color=\"outline-info\"\n          className=\"btn-sm\"\n          size=\"sm\"\n          onClick={() => setGamertag(userGamertag)}\n          disabled={isLoading}\n        >\n          {isLoading && <Spinner color=\"light\" size=\"sm\" />}\n          {!isLoading && \"Go\"}\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n  );\n};\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { NavItem } from \"reactstrap\";\n\nexport default ({ url, text }) => {\n  const location = useLocation();\n  const cssClass =\n    \"nav-link \" + (location.pathname.includes(url) ? \"active\" : \"\");\n\n  return (\n    <NavItem>\n      <Link to={url} className={cssClass}>\n        {text}\n      </Link>\n    </NavItem>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, NavbarToggler, Collapse, Nav, NavbarText } from \"reactstrap\";\nimport UserLogin from \"./UserLogin\";\nimport NavLink from \"./NavLink\";\n\nexport default () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Halo Collectibles\n        </Link>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavLink url=\"/general\" text=\"General\" />\n            <NavLink url=\"/haloce\" text=\"Halo:&nbsp;CE\" />\n            <NavLink url=\"/halo2\" text=\"Halo&nbsp;2\" />\n            <NavLink url=\"/halo3\" text=\"Halo&nbsp;3\" />\n            <NavLink url=\"/reach\" text=\"Halo:&nbsp;Reach\" />\n            <NavLink url=\"/ODST\" text=\"Halo&nbsp;3:&nbsp;ODST\" />\n          </Nav>\n          <NavbarText>\n            <UserLogin />\n          </NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Jumbotron } from \"reactstrap\";\nimport { UserContext } from \"../UserContext\";\nimport AlertMessage from \"./AlertMessage\";\n\nexport default () => {\n  const { gamertag, xuid } = useContext(UserContext).player;\n\n  return (\n    <div>\n      <AlertMessage color=\"info\" isVisible={gamertag}>\n        You are viewing achievements for{\" \"}\n        <strong>\n          {gamertag} (XUID: {xuid})\n        </strong>\n      </AlertMessage>\n      <Jumbotron>\n        <h1 className=\"display-3\">Halo Collectibles</h1>\n        <p className=\"lead\">\n          This site will work as a tracking mechanism for following which\n          achievements and Collectibles you have claimed.\n        </p>\n        <hr className=\"my-2\" />\n        <p>\n          You may view the achievements using the navigation options above. Use\n          the text box above to filter out achievements completed by a\n          particular user or to view all of their completed achievements.\n        </p>\n        <p>\n          Achievements will be refreshed every hour. If you notice stale\n          achievements, refresh the page.\n        </p>\n      </Jumbotron>\n    </div>\n  );\n};\n","import React from \"react\";\n\nconst AchievementCount = ({ categories, className }) => {\n  const numberOfAchievements = categories.reduce(\n    (sum, cat) => cat.achievements.length + sum,\n    0\n  );\n\n  return <span className={className}>{numberOfAchievements} Achievements</span>;\n};\n\nexport default AchievementCount;\n","import React from \"react\";\nimport AchievementCount from \"../../common/achievements/AchievementCount\";\nimport Achievements from \"../../common/achievements/Achievements\";\nimport Categories from \"./categories.json\";\n\nexport default () => {\n  return (\n    <div>\n      <h2>\n        General and Cross-game\n        <AchievementCount className=\"float-right\" categories={Categories} />\n      </h2>\n\n      <Achievements categories={Categories} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { IoLogoYoutube } from \"react-icons/io\";\nimport { MdExpandMore, MdExpandLess, MdCheckCircle } from \"react-icons/md\";\nimport { Collapse } from \"reactstrap\";\n\nexport default ({ skull }) => {\n  const [collapse, setCollapse] = React.useState(false);\n\n  const toggle = () => setCollapse(!collapse);\n\n  return (\n    <div className=\"skull-card\">\n      <div\n        className={\n          skull.difficulty === \"Legendary\"\n            ? \"skull-card__header legendary\"\n            : \"skull-card__header\"\n        }\n      >\n        <div className=\"skull-card__title\">\n          <dvi className=\"skull-card__title-text\">\n            {skull.name}\n            {skull.isFound && (\n              <MdCheckCircle className=\"skull-card__title-icon\" />\n            )}\n          </dvi>\n          <div className=\"skull-card__level\">\n            {skull.level} - {skull.difficulty}\n          </div>\n        </div>\n\n        <div className=\"skull-card__link\">\n          <a\n            href={`https://www.youtube.com/watch?v=${skull.video}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <IoLogoYoutube />\n          </a>\n          {collapse ? (\n            <div onClick={toggle}>\n              Location\n              <MdExpandLess />\n            </div>\n          ) : (\n            <div onClick={toggle}>\n              Location\n              <MdExpandMore />\n            </div>\n          )}\n        </div>\n      </div>\n      <Collapse isOpen={collapse}>\n        <div\n          className=\"skull-card__location\"\n          dangerouslySetInnerHTML={{ __html: skull.location }}\n        />\n      </Collapse>\n    </div>\n  );\n};\n","import React from \"react\";\nimport SkullCard from \"./SkullCard\";\nimport { UserContext } from \"../../UserContext\";\nimport \"./skulls.css\";\nimport { Col, Row, Alert } from \"reactstrap\";\n\nexport default ({ skulls }) => {\n  const { achievements, showCompleted } = React.useContext(UserContext).player;\n  let filteredSkulls = skulls;\n\n  if (achievements && achievements.length > 0) {\n    filteredSkulls = filteredSkulls.map((skull) => {\n      const achievement = achievements.find((a) => a.name.includes(skull.name));\n\n      return {\n        ...skull,\n        isFound: achievement ? achievement.isComplete : false,\n      };\n    });\n  }\n\n  if (!showCompleted) {\n    filteredSkulls = filteredSkulls.filter((skull) => !skull.isFound);\n  }\n\n  if (filteredSkulls.length === 0) {\n    return (\n      <div>\n        <Alert color=\"info\">\n          You have already unlocked all the skulls! Toggle the switch in the\n          navigation to show your already achieved skulls.\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {skulls.every((s) => s.difficulty === \"Any\") && (\n        <Alert color=\"info\">\n          The skulls can be found on <strong>any</strong> difficulty.\n        </Alert>\n      )}\n\n      {skulls.every((s) => s.difficulty === skulls[0].difficulty) &&\n        skulls[0].difficulty !== \"Any\" && (\n          <Alert color=\"warning\">\n            All skulls must be found on <strong>{skulls[0].difficulty}</strong>{\" \"}\n            difficulty (or higher).\n          </Alert>\n        )}\n\n      <Row noGutters>\n        {filteredSkulls.map((skull) => (\n          <Col key={skull.name} sm={12} md={6} lg={4}>\n            <SkullCard skull={skull} key={skull.name} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { MdCheckCircle, MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport { IoLogoYoutube } from \"react-icons/io\";\nimport { Collapse } from \"reactstrap\";\n\nexport default ({ terminal }) => {\n  const [collapse, setCollapse] = React.useState(false);\n\n  const toggle = () => setCollapse(!collapse);\n\n  return (\n    <div className=\"terminal-card\">\n      <div className=\"terminal-card__header\">\n        <div className=\"terminal-card__title\">\n          <dvi className=\"terminal-card__title-text\">\n            Terminal {terminal.id}\n            {terminal.isFound && (\n              <MdCheckCircle className=\"terminal-card__title-icon\" />\n            )}\n          </dvi>\n          <div className=\"terminal-card__level\">{terminal.level}</div>\n        </div>\n\n        <div className=\"terminal-card__link\">\n          <a\n            href={`https://www.youtube.com/watch?v=${terminal.video}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <IoLogoYoutube />\n          </a>\n          {collapse ? (\n            <div onClick={toggle}>\n              Location\n              <MdExpandLess />\n            </div>\n          ) : (\n            <div onClick={toggle}>\n              Location\n              <MdExpandMore />\n            </div>\n          )}\n        </div>\n      </div>\n      <Collapse isOpen={collapse}>\n        <div\n          className=\"terminal-card__location\"\n          dangerouslySetInnerHTML={{ __html: terminal.location }}\n        />\n      </Collapse>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Row, Col, Alert } from \"reactstrap\";\nimport TerminalCard from \"./TerminalCard\";\nimport { UserContext } from \"../../UserContext\";\n\nimport \"./terminals.css\";\n\nconst Terminals = ({ terminals }) => {\n  const { achievements, showCompleted } = React.useContext(UserContext).player;\n\n  let filteredTerminals = terminals;\n\n  if (achievements && achievements.length > 0) {\n    console.log(\"mapping\");\n    filteredTerminals = filteredTerminals.map((terminal) => {\n      const achievement = achievements.find((a) =>\n        a.description.includes(\n          `Activate Terminal ${terminal.id} on ${terminal.level}`\n        )\n      );\n      return {\n        ...terminal,\n        isFound: achievement ? achievement.isComplete : false,\n      };\n    });\n  }\n\n  if (!showCompleted) {\n    filteredTerminals = filteredTerminals.filter(\n      (terminal) => !terminal.isFound\n    );\n  }\n\n  if (filteredTerminals.length === 0) {\n    return (\n      <div>\n        <Alert color=\"info\">\n          You have already unlocked all the terminals! Toggle the switch in the\n          navigation to show your already achieved terminals.\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <Row className=\"terminals\" noGutters>\n      {filteredTerminals.map((t) => (\n        <Col key={t.name} sm={12} md={6} lg={4}>\n          <TerminalCard terminal={t} />\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default Terminals;\n","import React from \"react\";\nimport Achievements from \"./achievements/Achievements\";\nimport Skulls from \"./skulls/Skulls\";\nimport Terminals from \"./terminals/Terminals\";\nimport { FaSkull, FaTrophy, FaTerminal } from \"react-icons/fa\";\n\nexport default ({ name, achievements, skulls, terminals }) => {\n  const [activeTab, setActiveTab] = React.useState(\"Achievements\");\n\n  return (\n    <div className=\"game\">\n      <h2>\n        {name} {activeTab}\n      </h2>\n      <br />\n      <div className=\"game__navbar\">\n        <ul className=\"game__navbar-list\">\n          <li\n            className={\n              \"game__navbar-list-item\" +\n              (activeTab === \"Achievements\" ? \" active\" : \"\")\n            }\n          >\n            <button onClick={() => setActiveTab(\"Achievements\")}>\n              <FaTrophy /> Achievements\n            </button>\n          </li>\n          {skulls && (\n            <li\n              className={\n                \"game__navbar-list-item\" +\n                (activeTab === \"Skulls\" ? \" active\" : \"\")\n              }\n            >\n              <button onClick={() => setActiveTab(\"Skulls\")}>\n                <FaSkull /> Skulls\n              </button>\n            </li>\n          )}\n          {terminals && (\n            <li\n              className={\n                \"game__navbar-list-item\" +\n                (activeTab === \"Terminals\" ? \" active\" : \"\")\n              }\n            >\n              <button\n                onClick={() => setActiveTab(\"Terminals\")}\n                title=\"Terminals\"\n              >\n                <FaTerminal /> Terminals\n              </button>\n            </li>\n          )}\n        </ul>\n      </div>\n      <div className=\"game__sections\">\n        <div\n          className={\n            \"game__section\" + (activeTab === \"Achievements\" ? \" active\" : \"\")\n          }\n        >\n          <Achievements categories={achievements} />\n        </div>\n        {skulls && (\n          <div\n            className={\n              \"game__section\" + (activeTab === \"Skulls\" ? \" active\" : \"\")\n            }\n          >\n            <Skulls skulls={skulls} />\n          </div>\n        )}\n        {terminals && (\n          <div\n            className={\n              \"game__section\" + (activeTab === \"Terminals\" ? \" active\" : \"\")\n            }\n          >\n            <Terminals terminals={terminals} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Game from \"../../common/Game\";\nimport Categories from \"./achievements.json\";\nimport Skulls from \"./skulls.json\";\nimport Terminals from \"./terminals.json\";\n\nexport default () => (\n  <Game\n    achievements={Categories}\n    skulls={Skulls}\n    terminals={Terminals}\n    name=\"Halo: CE\"\n  />\n);\n","import React from \"react\";\nimport Categories from \"./achievements.json\";\nimport skulls from \"./skulls.json\";\nimport Game from \"../../common/Game\";\n\nconst Halo2 = () => (\n  <Game name=\"Halo 2\" skulls={skulls} achievements={Categories} />\n);\n\nexport default Halo2;\n","import React from \"react\";\nimport Categories from \"./achievements.json\";\nimport Skulls from \"./skulls.json\";\nimport Game from \"../../common/Game\";\n\nconst Halo3 = () => (\n  <Game achievements={Categories} skulls={Skulls} name=\"Halo 3\" />\n);\n\nexport default Halo3;\n","import React from \"react\";\nimport Categories from \"./achievements.json\";\nimport AchievementCount from \"../../common/achievements/AchievementCount\";\nimport Achievements from \"../../common/achievements/Achievements\";\n\nexport default class ODST extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>\n          Halo 3: ODST\n          <AchievementCount categories={Categories} className=\"float-right\" />\n        </h2>\n        <Achievements categories={Categories} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Categories from \"../reach/achievements.json\";\nimport Achievements from \"../../common/achievements/Achievements\";\nimport AchievementCount from \"../../common/achievements/AchievementCount\";\n\nexport default () => (\n  <div>\n    <h2>\n      Halo: Reach\n      <AchievementCount className=\"float-right\" categories={Categories} />\n    </h2>\n\n    <Achievements categories={Categories} />\n  </div>\n);\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\n\n// App Components\nimport UserAchievements from \"./features/user/UserAchievements\";\nimport { UserProvider } from \"./UserContext\";\nimport NavMenu from \"./common/layout/NavMenu\";\n\n// Assets\nimport \"./bootstrap.min.css\";\nimport \"./App.css\";\n\n// Routes\nimport Home from \"./common/Home\";\nimport General from \"./features/general/General\";\nimport HaloCE from \"./features/haloce/HaloCE\";\nimport Halo2 from \"./features/halo2/Halo2\";\nimport Halo3 from \"./features/halo3/Halo3\";\nimport ODST from \"./features/ODST/ODST\";\nimport Reach from \"./features/reach/Reach.jsx\";\n\nexport default () => (\n  <HashRouter>\n    <UserProvider>\n      <div className=\"App\">\n        <header>\n          <NavMenu />\n        </header>\n        <Container fluid className=\"mt-3\">\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/user\" exact>\n              <UserAchievements />\n            </Route>\n            <Route path=\"/general\" exact>\n              <General />\n            </Route>\n            <Route path=\"/haloce\" exact>\n              <HaloCE />\n            </Route>\n            <Route path=\"/halo2\">\n              <Halo2 />\n            </Route>\n            <Route path=\"/halo3\" exact>\n              <Halo3 />\n            </Route>\n            <Route path=\"/reach\" exact>\n              <Reach />\n            </Route>\n            <Route path=\"/ODST\" exact>\n              <ODST />\n            </Route>\n          </Switch>\n        </Container>\n      </div>\n    </UserProvider>\n  </HashRouter>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}